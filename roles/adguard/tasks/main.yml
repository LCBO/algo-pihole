---
# based on https://github.com/WoodenDoors/ansible-adguard-home
- name: Ensure user exists
  user:
    name: "{{ adguard_home_user }}"
    state: present

- name: Ensure base directory exists
  file:
    dest: "{{ adguard_home_base_path }}"
    owner: "{{ adguard_home_user }}"
    group: "{{ adguard_home_group }}"
    recurse: yes
    state: directory

- name: Download AdGuardHome
  get_url:
    url: "{{ adguard_home_download_url }}"
    dest: "{{ adguard_home_tmp_path }}"

- name: Unarchive AdGuardHome
  unarchive:
    copy: no
    src: "{{ adguard_home_tmp_path }}/{{ adguard_home_archive }}"
    dest: "{{ adguard_home_base_path }}"
    owner: "{{ adguard_home_user }}"
    group: "{{ adguard_home_group }}"
  become: yes
  become_user: "{{ adguard_home_user }}"

- name: Restore AdGuard settings
  template:
    src: AdGuardHome.yaml.j2
    dest: "{{ adguard_home_path }}/AdGuardHome.yaml"
    owner: root
    group: root
    mode: 0644
    force: yes

- name: Install AdGuardHome
  command: "{{ adguard_home_executable }} -s install"
  become: yes
  become_user: "{{ adguard_home_user }}"
  changed_when: false
  notify:
   - restart systemd-resolved
   - restart AdGuardHome

- name: Ensure that the AdGuardHome service directory exist
  file:
    path: /etc/systemd/resolved.conf.d/
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Ubuntu | Add custom requirements to successfully start the unit
  copy:
    dest: /etc/systemd/resolved.conf.d/adguardhome.conf
    content: |
      [Resolve]
      DNS=127.0.0.1
      DNSStubListener=no

- name: Set AdGuardHome permissions
  command: "setcap CAP_NET_BIND_SERVICE=+eip {{ adguard_home_executable }}"
  become: yes
  become_user: "{{ adguard_home_user }}"
  changed_when: false

- name: Add hostname to hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ ansible_default_ipv4.address }} {{ ansible_hostname }}.{{ ansible_facts['domain'] }} {{ ansible_hostname }}"

- meta: flush_handlers
